name: Generate and Deploy Website

on:
  push:
    branches:
      - main # main branch'ine her push yapıldığında bu workflow çalışacak
  workflow_dispatch: # GitHub Actions arayüzünden manuel olarak tetiklenebilir

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # İş akışını çalıştıracak işletim sistemi

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Deponuzu sunucuya çeker

    - name: Set up Python
      uses: actions/setup-python@v5 # Python ortamını kurar
      with:
        # Lütfen buradaki '3.x' yerine kullandığınız Python sürümünü yazın (örn: '3.9', '3.10', '3.11').
        python-version: '3.x' 

    - name: Install Python dependencies (if any)
      run: |
        python -m pip install --upgrade pip
        # Eğer varsa, bağımlılıklarınızı buraya yükleyin (örn: requests, beautifulsoup4 vb.).
        # Eğer bir requirements.txt dosyanız varsa, aşağıdaki satırın yorumunu kaldırın:
        # pip install -r requirements.txt

    - name: Run Python script to generate HTML
      run: |
        # Bu komut, generate_continent_html_file.py dosyanızdaki 'main' fonksiyonunu çalıştırır.
        # Eğer ana kodunuz bir 'main' fonksiyonu içinde değilse ve dosya direkt çalıştırıldığında her şeyi yapıyorsa,
        # yukarıdaki satırı silip alttaki satırın yorumunu kaldırın:
        python -c "from generate_continent_html_file import main; main()"
        # python generate_continent_html_file.py

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]' # Otomatik commit yapan botun adı
        git config --global user.email 'github-actions[bot]@users.noreply.github.com' # Botun email'i

        git add . # Tüm değişen dosyaları (yeni HTML'ler, JSON'lar vb.) stage'e ekle
        
        # Sadece değişiklikler varsa commit yap
        # Eğer hiçbir değişiklik yoksa, commit yapmadan devam eder.
        git diff-index --quiet HEAD || git commit -m "Automated build: Generate and update site files"

        # Değişiklikleri ana branch'e geri push et
        git push
      env:
        # GitHub tarafından otomatik olarak sağlanan token. Hassas bilgileri saklamak için kullanılır.
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
